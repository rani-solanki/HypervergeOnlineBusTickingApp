{"ast":null,"code":"var _jsxFileName = \"/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/component/layout/Aleart.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // import alerts from \"../../Reducer/aleart\";\n// it is getting pop on the browser!!!!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = ({\n  alerts\n}) => alerts !== null && alerts.length > 0 && alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `alert alert-${alert.alertType}`,\n  children: alert.msg\n}, alert.key, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 13\n}, this));\n\n_c = Alert;\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/component/layout/Aleart.js"],"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","alertType","msg","key","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACVA,MAAM,KAAK,IAAX,IACIA,MAAM,CAACC,MAAP,GAAgB,CADpB,IAEID,MAAM,CAACE,GAAP,CAAYC,KAAD,iBACP;AAAqB,EAAA,SAAS,EAAG,eAAcA,KAAK,CAACC,SAAU,EAA/D;AAAA,YACKD,KAAK,CAACE;AADX,GAAUF,KAAK,CAACG,GAAhB;AAAA;AAAA;AAAA;AAAA,QADJ,CAHR;;KAAMP,K;AASNA,KAAK,CAACQ,SAAN,GAAkB;AACdP,EAAAA,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC;AADV,CAAlB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,MAAM,EAAEW,KAAK,CAACR;AADkB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n// import alerts from \"../../Reducer/aleart\";\n// it is getting pop on the browser!!!!\n\nconst Alert = ({ alerts }) => \n    alerts !== null &&\n        alerts.length > 0 &&\n        alerts.map((alert) => (\n            <div key={alert.key} className={`alert alert-${alert.alertType}`}>\n                {alert.msg}\n            </div>\n        ))\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);"]},"metadata":{},"sourceType":"module"}