{"ast":null,"code":"import axios from 'axios';\nimport setAlert from './aleart';\nimport { BOOKING_FAIL, BOOKING_SUCCESS, ALL_TICKET, NO_TICKETS, CANCEL_TICKET, CANNOT_CANCEL } from './type';\nexport const bookSeats = (busId, userData) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(userData);\n    const res = await axios.post(`/api/buses/${busId}/tickets`, body, config);\n    console.log(res.data);\n    dispatch({\n      type: BOOKING_SUCCESS,\n      payload: res.data\n    });\n    alert(\"Tickets booked succesfully\", \"success\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(errors);\n\n    if (errors) {\n      errors.forEach(error => dispatch(alert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: BOOKING_FAIL\n    });\n    alert(err);\n  }\n};\nexport const getTickets = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get('/api/auth/tickets/ticket', config);\n    console.log(\"Tickets\", res.data);\n    dispatch({\n      type: ALL_TICKET,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: NO_TICKETS\n    });\n  }\n};\nexport const cancelTicket = ticketId => async dispatch => {\n  console.log(ticketId);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = axios.delete(`/users/user/tickets/ticket/${ticketId}`, config);\n    dispatch({\n      type: CANCEL_TICKET,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: CANNOT_CANCEL\n    });\n  }\n};","map":{"version":3,"sources":["/home/rani/Documents/Red_bus_app/Frontend/src/action/Bookseat.js"],"names":["axios","setAlert","BOOKING_FAIL","BOOKING_SUCCESS","ALL_TICKET","NO_TICKETS","CANCEL_TICKET","CANNOT_CANCEL","bookSeats","busId","userData","dispatch","config","headers","body","JSON","stringify","res","post","console","log","data","type","payload","alert","err","errors","response","forEach","error","msg","getTickets","get","cancelTicket","ticketId","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SACIC,YADJ,EAEIC,eAFJ,EAGIC,UAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,aANJ,QAOO,QAPP;AASA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAkB;AAC5D,MAAI;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAb;AACA,UAAMO,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAY,cAAaT,KAAM,UAA/B,EAA0CK,IAA1C,EAAgDF,MAAhD,CAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAV,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEnB,eADD;AAELoB,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAG,IAAAA,KAAK,CAAC,4BAAD,EAA+B,SAA/B,CAAL;AACH,GAfD,CAgBA,OAAOC,GAAP,EAAY;AACR,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBK,MAAjC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;;AACA,QAAIA,MAAJ,EAAW;AACPA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIlB,QAAQ,CAACa,KAAK,CAACK,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAN,CAAhC;AACH;;AACDnB,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEpB;AADD,KAAD,CAAR;AAGAsB,IAAAA,KAAK,CAACC,GAAD,CAAL;AACH;AACJ,CA5BM;AA8BP,OAAO,MAAMM,UAAU,GAAG,MAAM,MAAMpB,QAAN,IAAkB;AAC9C,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAKA,MAAI;AACA,UAAMI,GAAG,GAAG,MAAMjB,KAAK,CAACgC,GAAN,CAAU,0BAAV,EAAsCpB,MAAtC,CAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,GAAG,CAACI,IAA1B;AAEAV,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAElB,UADD;AAELmB,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GATD,CASE,OAAOI,GAAP,EAAY;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAd,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEjB;AADD,KAAD,CAAR;AAGH;AACJ,CArBM;AAuBP,OAAO,MAAM4B,YAAY,GACrBC,QADwB,IACX,MAAMvB,QAAN,IAAiB;AAC1BQ,EAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACA,QAAMtB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAKA,MAAI;AACA,UAAMI,GAAG,GAAGjB,KAAK,CAACmC,MAAN,CAAc,8BAA6BD,QAAS,EAApD,EAAuDtB,MAAvD,CAAZ;AACAD,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEhB,aADD;AAELiB,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOI,GAAP,EAAY;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAd,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEf;AADD,KAAD,CAAR;AAGH;AACJ,CApBE","sourcesContent":["import axios from 'axios';\nimport setAlert from './aleart';\nimport {\n    BOOKING_FAIL,\n    BOOKING_SUCCESS,\n    ALL_TICKET,\n    NO_TICKETS,\n    CANCEL_TICKET,\n    CANNOT_CANCEL\n} from './type';\n\nexport const bookSeats = (busId, userData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const body = JSON.stringify(userData)\n        const res = await axios.post(`/api/buses/${busId}/tickets`, body, config)\n        console.log(res.data)\n        dispatch({\n            type: BOOKING_SUCCESS,\n            payload: res.data\n        })\n\n        alert(\"Tickets booked succesfully\", \"success\")\n    }\n    catch (err) {\n        const errors = err.response.data.errors;\n        console.log(errors)\n        if (errors){\n            errors.forEach(error => dispatch(alert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: BOOKING_FAIL,\n        })\n        alert(err)\n    }\n}\n\nexport const getTickets = () => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    try {\n        const res = await axios.get('/api/auth/tickets/ticket', config);\n        console.log(\"Tickets\",res.data)\n\n        dispatch({\n            type: ALL_TICKET,\n            payload: res.data\n        });\n        \n    } catch (err) {\n        console.log(err);\n        dispatch({\n            type: NO_TICKETS\n        });\n    }\n};\n\nexport const cancelTicket = (\n    ticketId) => async dispatch =>{\n        console.log(ticketId)\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        try {\n            const res = axios.delete(`/users/user/tickets/ticket/${ticketId}`, config);\n            dispatch({\n                type: CANCEL_TICKET,\n                payload: res.data\n            });\n        } catch (err) {\n            console.log(err);\n            dispatch({\n                type: CANNOT_CANCEL\n            });\n        }\n    };\n"]},"metadata":{},"sourceType":"module"}