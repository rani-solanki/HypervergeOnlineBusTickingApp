{"ast":null,"code":"import { ADD_BUS, ADD_BUS_FAILED } from './type';\nimport axios from 'axios';\nimport setAlert from './aleart';\n\nconst addBus = ({\n  busName,\n  agency,\n  vehicleNo,\n  seats,\n  busType,\n  seatCategory,\n  busStaff,\n  policy,\n  secdule,\n  image,\n  from,\n  to,\n  arrivalTime,\n  departureTime\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  for (let day = 0; day < secdule.length; day++) {\n    secdule[day] = days.indexOf(secdule[day]);\n  }\n\n  const start = from.trim().split(',');\n  const End = to.trim().split(',');\n  from = {\n    \"city\": start[0],\n    \"state\": start[1]\n  };\n  to = {\n    \"city\": End[0],\n    \"state\": End[1]\n  };\n  from = {\n    \"city\": start[0],\n    \"state\": start[1]\n  };\n  to = {\n    \"city\": End[0],\n    \"state\": End[1]\n  };\n  const body = JSON.stringify({\n    busName,\n    agency,\n    vehicleNo,\n    seats,\n    busType,\n    seatCategory,\n    busStaff,\n    policy,\n    secdule,\n    image,\n    from,\n    to,\n    arrivalTime,\n    departureTime\n  });\n\n  try {\n    const res = await axios.post('/api/admins/admin/Addbus', body, config);\n    dispatch({\n      type: ADD_BUS,\n      payload: res.data\n    });\n    alert('bus has added succefully', 'success');\n  } catch (err) {\n    console.log(err);\n    alert('there was an error while adding the bus', 'danger');\n    dispatch({\n      type: ADD_BUS_FAILED\n    });\n  }\n};\n\nexport default addBus;","map":{"version":3,"sources":["/home/rani/Documents/Red_bus_app/Frontend/src/action/bus.js"],"names":["ADD_BUS","ADD_BUS_FAILED","axios","setAlert","addBus","busName","agency","vehicleNo","seats","busType","seatCategory","busStaff","policy","secdule","image","from","to","arrivalTime","departureTime","dispatch","config","headers","days","day","length","indexOf","start","trim","split","End","body","JSON","stringify","res","post","type","payload","data","alert","err","console","log"],"mappings":"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","sourcesContent":["import { ADD_BUS, ADD_BUS_FAILED } from './type';\nimport axios from 'axios';\nimport setAlert from './aleart';\n\nconst addBus = ({\n    busName,\n    agency,\n    vehicleNo,\n    seats,\n    busType,\n    seatCategory,\n    busStaff,\n    policy,\n    secdule,\n    image,\n    from,\n    to,\n    arrivalTime,\n    departureTime\n}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    for (let day = 0; day < secdule.length; day++) {\n        secdule[day] = days.indexOf(secdule[day]);\n    }\n    const start = from.trim().split(',')\n    const End = to.trim().split(',')\n\n    from = { \"city\": start[0], \"state\": start[1] }\n    to = { \"city\": End[0], \"state\": End[1] }\n    from = { \"city\": start[0], \"state\": start[1] }\n    to = { \"city\": End[0], \"state\": End[1] }\n\n    const body = JSON.stringify({\n        busName,\n        agency,\n        vehicleNo,\n        seats,\n        busType,\n        seatCategory,\n        busStaff,\n        policy,\n        secdule,\n        image,\n        from,\n        to,\n        arrivalTime,\n        departureTime\n    });\n\n    try {\n        const res = await axios.post('/api/admins/admin/Addbus', body, config);\n        dispatch({\n            type: ADD_BUS,\n            payload: res.data\n        });\n        alert('bus has added succefully', 'success');\n    } catch (err) {\n        console.log(err);\n        alert('there was an error while adding the bus', 'danger');\n        dispatch({\n            type: ADD_BUS_FAILED\n        });\n    }\n    };\n\nexport default addBus"]},"metadata":{},"sourceType":"module"}