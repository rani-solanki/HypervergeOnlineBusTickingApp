{"ast":null,"code":"import _regeneratorRuntime from\"/home/rani/Documents/Red_bus_app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rani/Documents/Red_bus_app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/rani/Documents/Red_bus_app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/rani/Documents/Red_bus_app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/rani/Documents/Red_bus_app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from\"react\";import{Link,Redirect}from'react-router-dom';import{connect}from'react-redux';import{login}from'../../action/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(_ref){var login=_ref.login,isAuthenticated=_ref.isAuthenticated;var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var email=formData.email,password=formData.password;var _onChange=function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();console.log(formData);login(email,password);case 3:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticated){return/*#__PURE__*/_jsx(Redirect,{to:\"/searchBar\"});}return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:{width:\"40%\",background:\"white\",padding:\"2%\",borderRadius:\"3%\"},children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return _onSubmit(e);},children:[/*#__PURE__*/_jsx(\"center\",{children:\" Log In \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",placeholder:\"Enter email\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",placeholder:\"Enter password\",name:\"password\",value:password,onChange:function onChange(e){return _onChange(e);}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary btn-block \",children:\"Submit\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"forgot-password text-right\",children:[\"Forgot \",/*#__PURE__*/_jsx(Link,{to:\"#\",children:\"password?\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"my-1\",children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Sign up\"})]})]})})});};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/home/rani/Documents/Red_bus_app/Frontend/src/component/auth/Login.js"],"names":["React","Fragment","useState","Link","Redirect","connect","login","Login","isAuthenticated","email","password","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","console","log","width","background","padding","borderRadius","mapStateToProps","state","auth"],"mappings":"8xBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAASC,IAAT,CAAeC,QAAf,KAA+B,kBAA/B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,KAAT,KAAsB,mBAAtB,C,wFAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA+B,IAA5BD,CAAAA,KAA4B,MAA5BA,KAA4B,CAArBE,eAAqB,MAArBA,eAAqB,CACzC,cAAgCN,QAAQ,CAAC,CACrCO,KAAK,CAAE,EAD8B,CAErCC,QAAQ,CAAE,EAF2B,CAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eAKA,GAAQH,CAAAA,KAAR,CAA4BE,QAA5B,CAAQF,KAAR,CAAeC,QAAf,CAA4BC,QAA5B,CAAeD,QAAf,CACA,GAAMG,CAAAA,SAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,QAAIF,CAAAA,WAAW,gCAAMD,QAAN,wBAAiBG,CAAC,CAACC,MAAF,CAASC,IAA1B,CAAiCF,CAAC,CAACC,MAAF,CAASE,KAA1C,GAAf,EAAlB,CACA,GAAMC,CAAAA,SAAQ,2FAAG,iBAAMJ,CAAN,kHACbA,CAAC,CAACK,cAAF,GACAC,OAAO,CAACC,GAAR,CAAYV,QAAZ,EACAL,KAAK,CAACG,KAAD,CAAQC,QAAR,CAAL,CAHa,sDAAH,kBAARQ,CAAAA,QAAQ,6CAAd,CAKA,GAAIV,eAAJ,CAAqB,CACjB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,YAAb,EAAP,CACH,CACD,mBACI,KAAC,QAAD,wBACI,YAAK,KAAK,CAAE,CACRc,KAAK,CAAE,KADC,CAERC,UAAU,CAAE,OAFJ,CAGRC,OAAO,CAAE,IAHD,CAIRC,YAAY,CAAE,IAJN,CAAZ,uBAMI,cAAM,QAAQ,CAAE,kBAAAX,CAAC,QAAII,CAAAA,SAAQ,CAACJ,CAAD,CAAZ,EAAjB,wBACI,oCADJ,cAEI,aAAK,SAAS,CAAC,YAAf,wBACI,wCADJ,cAEI,cAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAC,cAA9B,CAA6C,WAAW,CAAC,aAAzD,CAAuE,IAAI,CAAC,OAA5E,CAAoF,KAAK,CAAEL,KAA3F,CACI,QAAQ,CAAE,kBAAAK,CAAC,QAAID,CAAAA,SAAQ,CAACC,CAAD,CAAZ,EADf,EAFJ,GAFJ,cAOI,aAAK,SAAS,CAAC,YAAf,wBACI,mCADJ,cAEI,cAAO,IAAI,CAAC,UAAZ,CAAuB,SAAS,CAAC,cAAjC,CAAgD,WAAW,CAAC,gBAA5D,CAA6E,IAAI,CAAC,UAAlF,CAA6F,KAAK,CAAEJ,QAApG,CACI,QAAQ,CAAE,kBAAAI,CAAC,QAAID,CAAAA,SAAQ,CAACC,CAAD,CAAZ,EADf,EAFJ,GAPJ,cAYI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,4BAAhC,oBAZJ,cAaI,WAAG,SAAS,CAAC,4BAAb,kCACW,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,uBADX,GAbJ,cAgBI,WAAG,SAAS,CAAC,MAAb,kDAC2B,KAAC,IAAD,EAAM,EAAE,CAAC,WAAT,qBAD3B,GAhBJ,GANJ,EADJ,EADJ,CA+BH,CA/CD,CAqDA,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BnB,eAAe,CAAEmB,KAAK,CAACC,IAAN,CAAWpB,eADE,CAAL,EAA7B,CAIA,cAAeH,CAAAA,OAAO,CAACqB,eAAD,CAAkB,CAAEpB,KAAK,CAALA,KAAF,CAAlB,CAAP,CAAoCC,KAApC,CAAf","sourcesContent":["import React, { Fragment, useState} from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../../action/auth';\nimport propTypes from 'prop-types';\n\nconst Login = ({ login, isAuthenticated }) =>{\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n    });\n    \n    const { email, password } = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    const onSubmit = async e => {\n        e.preventDefault();\n        console.log(formData)\n        login(email, password);\n    }\n    if (isAuthenticated) {\n        return <Redirect to=\"/searchBar\" />\n    }\n    return (\n        <Fragment>\n            <div style={{\n                width: \"40%\",\n                background: \"white\",\n                padding: \"2%\",\n                borderRadius: \"3%\"\n            }}>\n                <form onSubmit={e => onSubmit(e)}>\n                    <center> Log In </center>\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name='email' value={email}\n                            onChange={e => onChange(e)} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name='password' value={password}\n                            onChange={e => onChange(e)} />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary btn-block \">Submit</button>\n                    <p className=\"forgot-password text-right\">\n                        Forgot <Link to=\"#\">password?</Link>\n                    </p>\n                    <p className='my-1'>\n                        Don't have an account? <Link to='/register'>Sign up</Link>\n                    </p>\n                </form>\n            </div>\n        </Fragment>\n    )\n};\n\nLogin.propTypes = {\n    login: propTypes.func.isRequired,\n    isAuthenticated: propTypes.bool\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}